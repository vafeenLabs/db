# База данных автосервиса «Автокомплект»

Спроектировать БД автосервиса «Автокомплект». Автосервис выполняет заказы на ремонт автомобилей. В БД необходимо фиксировать данные об автомобиле: номер, год выпуска, марку, модель, категорию, тип кузова, фамилию, имя, отчество и телефон владельца. У одного владельца может быть несколько автомобилей. Информация о заказе включает в себя дату поступления заказа, запланированный и фактический сроки выполнения заказа, список неисправностей автомобиля, наименования работ, список запчастей, подлежащих замене, общую стоимость заказа, комментарии. За исполнение заказа отвечает мастер. Данные о мастере: фамилия, имя, отчество, телефон, дата рождения, специализация, стаж и доля ставки, на которую работает мастер. В автосервисе имеются запчасти, необходимые для ремонта. Информация о запчастях состоит из наименования, кода, категории, дополнительных характеристик, количества в наличии, единиц измерения (название и сокращение). Время от времени автосервис заказывает запчасти у поставщиков. Заказ запчастей описывается датой формирования заказа, планируемой и фактической датами поступления запчастей, перечнем запчастей, их количеством и стоимостью в заказе. Информация о поставщике включает наименование, адрес, телефон(-ы), фамилию, имя, отчество менеджера.

Реализовать следующие запросы к БД:

1. Выбрать все данные обо всех мастерах.
2. Выбрать фамилию и инициалы (через точку), телефон мастеров. Результат отсортировать по фамилии в лексикографическом порядке.
3. Выбрать даты заказов без повторений. Результат отсортировать по убыванию даты.
4. Выбрать id запчастей, для которых не определена категория.
5. Выбрать заглавными буквами фамилии, имена, отчества мастеров, работающих менее чем на 0,7 ставки. Результат отсор- тировать по длине фамилии в убывающем порядке и по имени в лексикографическом порядке.
6. Выбрать номера автомобилей, выпущенных с 2020 года по текущий год.
7. Выбрать все данные о владельцах с id равным 1, 3, 5, 8,
8. Выбрать все данные об автомобилях, в номерах которых есть 123.
9. Выбрать все данные о заказах, в комментариях к которым есть хотя бы один из символов «%», «/», «\», «-».
10. Выбрать среднюю стоимость заказов.
11. Выбрать максимальный и минимальный сроки исполнения заказов.
12. Выбрать количество различных поставщиков, заказы от которых пришли раньше ожидаемой даты прибытия.
13. Вывести суммарную стоимость имеющихся на складе запчастей.
14. Выбрать название марки, модели, госномер всех автомобилей.
15. Выбрать названия запчастей, сокращенное название единиц измерения, количество запчастей в наличии, которые относятся к какой-то конкретной категории (сами подставьте конкретное название категории).
16. Для каждого владельца вывести год его самого старого автомобиля.
17. Для каждого автомобиля выбрать количество различных запчастей, которые были заменены в текущем году. Результат отсортировать по количеству замен в порядке убывания.
18. Для каждой даты поступления заказа вывести название времени года в одном столбце, а остальные данные: дату поступления, срок, стоимость, номер автомобиля – в другом.
19. Для каждого года вывести количество выпущенных автомобилей, ремонтировавшихся в текущем месяце. 
20. Выбрать фамилии, имена, отчества мастеров, которые выполнили не более 5 заказов.
21. Вывести фамилию, имя, отчество владельца, номер автомобиля и количество ремонтов за прошлый год. В результат включить только те автомобили, которые старше 5 лет и ремонти- ровались более 3 раз.
22. Для каждого мастера вывести количество ремонтов, им выполненных по трем последним годам. Результирующая таблица должна включать три столбца, соответствующие трем последним годам, и два столбца с id и фамилией, именем, отчеством мастера.
23. Вывести название запчастей, которые было заменены как минимум на трех машинах марки Хонда.
24. Выбрать названия таких неисправностей, которые устраняет только один мастер.
25. Для каждой автомашины вывести количество замен различных запчастей в прошлом году. В результат включить только те автомашины, для которых было заменено более двух различных деталей. Результат отсортировать по убыванию количества замен и по возрастанию id авто.
26. Выбрать названия всех марок и, если есть, то названия моделей.
27. Выбрать названия марок, для которых не указаны модели в базе.
28. Выбрать госномер автомобиля, дату последнего обращения и, если были замены запчастей, то их количество.
29. Выбрать госномер автомобиля, дату последнего обращения и, если были замены запчастей, то наименования запчастей.
30. Выбрать название марки и название моделей, автомобили которых не представлены в БД.
31. Выбрать номер автомобиля, которому каждый раз делают замену одной и той же запчасти.
32. Для каждого поставщика вывести названия категорий запчастей, которые он не поставляет.
33. Выбрать фамилии, имена, отчества мастеров и размер ставки. Результат отсортировать следующим образом: в первую очередь тех, кто не выполнил ни одного заказа за текущий месяц, затем тех, кто выполнил максимальное количество заказов за текущий месяц, в последнюю очередь все остальные.
34. Для каждого поставщика выбрать названия всех категорий запчастей и количество различных запчастей, им поставляемых. Если поставщик не поставляет запчасти какой-то категории, вывести 0. Результат отсортировать по id_поставщика и по названию категории.
35. Выбрать фамилию, имя, отчество владельца двух автомобилей одной модели.
36. Выбрать госномера, названия модели и марки автомобилей одной модели и одного года выпуска, которые ремонтировались одинаковое количество раз.
37. Выбрать название марки и модели, автомобили которой ремонтировались чаще других.
38. Выбрать все данные об автомобилях, для которых не производились замены запчастей.
39. Выбрать все данные о заказе с самым продолжительным сроком исполнения.
40. Выбрать фамилию, имя, отчество владельца, госномер автомобиля, на который был сделан самый дорогой заказ.
41. Выбрать название марки, название модели и название запчасти, которую приходится менять для данной модели чаще других.
42. Для последнего года выбрать количество просроченных заказов, количество заказов, выполненных вовремя, и количество заказов выполненных раньше срока по строкам. Пример результата:
Просроченные заказы
10
Заказы в срок
90
Заказы раньше срока
20
43. Для каждого месяца выбрать количество просроченных заказов, количество заказов, выполненных вовремя, и количество заказов, выполненных раньше срока по строкам. В результирующей таблице должно быть три столбца: название месяца, название вида количества (просроченные заказы, заказы в срок, заказы, выполненные раньше срока) и количество. Результат отсортировать по месяцам.
44. Выбрать автомобиль, на котором ни одну запчасть не меняли дважды.
45. Выбрать фамилию, имя, отчество мастера, который чинил автомобили всех категорий
46. Выбрать фамилии, имена, отчества владельцев транспортных средств двух разных категорий, которые имеют два автомобиля одной марки.
47. Выбрать названия запчастей, которые устанавливались на самые старые автомобили.
48. Выбрать марку, модель, госномер автомобилей, на которых делали замену, как самой дорогой, так и самой дешевой запчасти.
49. Вывести фамилии, имена, отчества владельцев, которые обладают 2 автомобилями и более, но не имеют тезок и/или однофамильцев.
50. Выбрать тройку самых старых автомобилей.
51. Выбрать все даты прошлого месяца, в которые не осуществляли замену запчастей.
52. Выбрать названия поставщиков, количество заказов в прошлом году, процентное отношение ко всем заказам прошлого года.


А ВОТ СОЗДАНИЕ ТАБЛИЦ 
CREATE TABLE IF NOT EXISTS person (
    id_person SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    surname TEXT NOT NULL,
    patronymic TEXT,
    phone VARCHAR(11) NOT NULL
);

CREATE TABLE IF NOT EXISTS work (
    id_work SERIAL PRIMARY KEY,
    name_work TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS malfunction (
    id_malfunction SERIAL PRIMARY KEY,
    name_malfunction TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS spare_part (
    code SERIAL PRIMARY KEY,
    name_spare_part TEXT NOT NULL,
    additional_features TEXT,
    quantity INTEGER,
    units_of_measurement TEXT,
    cost INTEGER,
    category TEXT
);

CREATE TABLE IF NOT EXISTS provider (
    id_provider SERIAL PRIMARY KEY,
    name_provider TEXT NOT NULL,
    adress TEXT NOT NULL,
    name_manager TEXT NOT NULL,
    surname_manager TEXT NOT NULL,
    patronymic_manager TEXT,
    phone_manager VARCHAR(11) NOT NULL
);

CREATE TABLE IF NOT EXISTS car (
    number VARCHAR(6) PRIMARY KEY,
    region VARCHAR(3) NOT NULL,
    year VARCHAR(4) NOT NULL,
    category TEXT NOT NULL,
    model TEXT NOT NULL,
    body_type TEXT NOT NULL,
    mark TEXT NOT NULL,
    id_person INTEGER REFERENCES person(id_person)
);

CREATE TABLE IF NOT EXISTS master (
    id_master SERIAL PRIMARY KEY,
    date_of_birth DATE,
    specialization TEXT,
    experience VARCHAR(2) NOT NULL,
    work_rate INTEGER,
    id_person INTEGER REFERENCES person(id_person)
);

CREATE TABLE IF NOT EXISTS order_ (
    id_order SERIAL PRIMARY KEY,
    date_of_receipt DATE,
    planned_completion DATE,
    actual_completion DATE,
    sum_of_cost INTEGER CHECK (sum_of_cost >= 0),
    comment TEXT,
    client BOOL,
    number_of_car VARCHAR(6) REFERENCES car(number),
    id_master INTEGER REFERENCES master(id_master)
);

CREATE TABLE IF NOT EXISTS order_malfunction (
    id_order INTEGER REFERENCES order_(id_order),
    id_malfunction INTEGER REFERENCES malfunction(id_malfunction)
);

ALTER TABLE
    order_malfunction
ADD
    CONSTRAINT order_malfunction_PK PRIMARY KEY (id_order, id_malfunction);

CREATE TABLE IF NOT EXISTS order_of_spare_part (
    id_order INTEGER REFERENCES order_(id_order),
    code INTEGER REFERENCES spare_part(code),
    count INTEGER CHECK (count > 0)
);

ALTER TABLE
    order_of_spare_part
ADD
    CONSTRAINT order_of_spare_part_PK PRIMARY KEY (id_order, code);

CREATE TABLE IF NOT EXISTS order_work (
    id_order INTEGER REFERENCES order_(id_order),
    id_work INTEGER REFERENCES work(id_work)
);

ALTER TABLE
    order_work
ADD
    CONSTRAINT order_work_PK PRIMARY KEY (id_order, id_work);

    
Это задание и запросы к нему на sql! Сделай мне заполнение базы данных данными которые подойдут для ВСЕХ ЗАПРОСОВ! ТАКЖЕ НАПИШИ МНЕ SQL КОД КАЖДОГО ЗАПРОСА И К НЕМУ ОТВЕТ - ТО, ЧТО ДОЛЖНО ВЫВЕСТИСЬ. СДЕЛАЙ ВСЕ 52 ЗАПРОСА, ЖЕЛАТЕЛЬНО ОДНИМ КОДОВЫМ ПОЛЕМ - ЗАПРОС И НИЖЕ КОММЕНТАРИЙ - ОТВЕТ ЧТО ДОЛЖНО ВЫВЕСТИСЬ 

